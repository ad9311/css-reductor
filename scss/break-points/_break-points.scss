@use '../abstracts/variables' as *;

@each $media, $break-point in $containers {
  /* Break Point #{$media} */
  @media screen and (min-width: $break-point) {
    /* Display types */
    @each $display-type, $value in $display {
      .d-#{$display-type}-#{$media} {
        display: $value;
      }
    }

    /* Flex direction */
    @each $flex-type, $value in $flex-direction {
      .flex-#{$flex-type}-#{$media} {
        flex-direction: $value;
      }
    }

    /* Flex wrap */
    @each $flex-type, $value in $flex-wrap {
      .flex-#{$flex-type}-#{$media} {
        flex-wrap: $value;
      }
    }

    /* Flex justify content */
    @each $flex-type, $value in $justify-content {
      .justify-#{$flex-type}-#{$media} {
        justify-content: $value;
      }
    }

    /* Flex align items */
    @each $flex-type, $value in $align-items {
      .align-items-#{$flex-type}-#{$media} {
        align-items: $value;
      }
    }

    /* Flex align content */
    @each $flex-type, $value in $align-content {
      .align-content-#{$flex-type}-#{$media} {
        align-content: $value;
      }
    }

    /* Position */
    @each $pos, $value in $position {
      .pos-#{$pos}-#{$media} {
        position: $value;
      }
    }

    /* Grid columns */
    @each $number, $value in $grid-column {
      .grid-#{$number}-#{$media} {
        display: grid;
        grid-template-columns: $value;
        grid-template-rows: auto;
        column-gap: $container-padding;
      }
    }

    /* Grid columns No Gutter */
    @each $number, $value in $grid-column {
      .grid-#{$number}-ngs {
        display: grid;
        grid-template-columns: $value;
        grid-template-rows: auto;
      }
    }
  }
}
